---
name: Lint

on:
  push:
  workflow_dispatch:

jobs:
  build-services:
    name: Lint
    runs-on: ubuntu-latest

    permissions: write-all

    strategy:
      matrix:
        chart: [accumulo, audit, authorization, cache, configuration, datawave-monolith, dictionary, hadoop, ingest, mysql, rabbitmq, zookeeper]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # super-linter needs the full git history to get the
          # list of files that changed across commits
          fetch-depth: 0 
      - name: Make PR dir
        run: mkdir pull-request
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          ref: main
          path: main
      - name: Install Helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: '3.12.0' # default is latest (stable)
        id: install
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Template HELM Chart on main
        run: |
          cd main/${{ matrix.chart }}
          helm dep update
          helm template . > ../templated-${{ matrix.chart }}.yml
      - name: Template HELM Chart on Branch
        run: |
          cd ${{ matrix.chart }}
          helm dep update
          helm template . > ../pull-request/templated-${{ matrix.chart }}.yml
      - name: Create results directory for SARIF report files
        shell: bash
        run: mkdir -p results
      - name: Update helm dependencies
        shell: bash
        run: |
          cd ${{ matrix.chart }}
          helm dependency update
          cd ..

      - name: Scan yaml files with kube-linter
        uses: stackrox/kube-linter-action@v1.0.5
        id: kube-linter-action-scan
        with:
          # Adjust this directory to the location where your kubernetes resources and helm charts are located.
          directory: ${{ matrix.chart }}
          # Adjust this to the location of kube-linter config you're using, or remove the setting if you'd like to use
          # the default config.
          config: .kube-lint-config.yaml
          # The following two settings make kube-linter produce scan analysis in SARIF format which would then be
          # made available in GitHub UI via upload-sarif action below.
          format: sarif
          output-file: results/kube-linter-${{ matrix.chart }}.sarif
        # The following line prevents aborting the workflow immediately in case your files fail kube-linter checks.
        # This allows the following upload-sarif action to still upload the results to your GitHub repo.
        continue-on-error: true
      - name: Generate Diff
        run: |
          mkdir output
          diff main/templated-${{ matrix.chart }}.yml pull-request/templated-${{ matrix.chart }}.yml > output/diff.md || true
      - name: Check if output/diff.md is non-empty
        id: check_diff
        run: |
          if [ -s output/diff.md ]; then
            echo "::set-output name=non_empty::true"
          else
            echo "::set-output name=non_empty::false"
          fi
      - name: Post diff as comment
        if: steps.check_diff.outputs.non_empty == 'true'
        run: |
          echo '```diff' > output/diff-upload.md
          cat output/diff.md >> output/diff-upload.md
          echo '```' >> output/diff-upload.md
          gh pr comment ${{ github.event.number }} --body-file output/diff-upload.md --edit-last || \
          gh pr comment ${{ github.event.number }} --body-file output/diff-upload.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload SARIF report files to GitHub
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results/kube-linter-${{ matrix.chart }}.sarif

      # Ensure the workflow eventually fails if files did not pass kube-linter checks.
      - name: Verify kube-linter-action succeeded
        shell: bash
        run: |
          echo "If this step fails, kube-linter found issues. Check the output of the scan step above."
          [[ "${{ steps.kube-linter-action-scan.outcome }}" == "success" ]]
