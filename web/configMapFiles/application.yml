datawave:
  security:
    util:
      subjectDnPattern: "(?:^|,)\\s*OU\\s*=\\s*.*\\s*(?:,|$)"
      npeOuList: "EXAMPLE_SERVER_OU1,EXAMPLE_SERVER_OU2"
  authorization:
    uri: "https://{{ .Values.authorizationService.meta.name }}:{{ .Values.authorizationService.ports.https }}/{{ .Values.authorizationService.endpoints.authorize }}"
logging:
  level:
    root: DEBUG
management:
  endpoint.health.show-details: when-authorized
  endpoints.web.base-path: /mgmt
  endpoints.web.exposure.include: "*"
server:
  non-secure-port: 8080
  outbound-ssl:
    key-store: ${server.ssl.key-store}
    key-store-password: ${server.ssl.key-store-password}
    key-store-type: ${server.ssl.key-store-type}
    trust-store: ${server.ssl.trust-store}
    trust-store-password: ${server.ssl.trust-store-password}
    trust-store-type: ${server.ssl.trust-store-type}
  port: 8443
  servlet.context-path: /${spring.application.name}
  ssl:
    client-auth: WANT
    key-store: '{{ .Values.secrets.keystore.path }}'
    key-store-password: '{{ .Values.secrets.keystore.password }}'
    key-store-type: '{{ .Values.secrets.keystore.type }}'
    trust-store: '{{ .Values.secrets.truststore.path }}'
    trust-store-type: '{{ .Values.secrets.truststore.type }}'
    trust-store-password: '{{ .Values.secrets.truststore.password }}'
spring:
  cloud:
    consul:
      enabled: false
  rabbitmq:
    discovery:
      enabled: false
      failFast: true
    host: '{{ .Values.messagingDeployment.meta.name }}'
  security:
    datawave:
      enforce-allowed-callers: false
      issuers-required: true
      jwt.ttl: 86400
      manager-role: Administator,JBossAdministrator
    user.password: passwordNotUsed